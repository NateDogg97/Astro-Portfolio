---
import { Image } from 'astro:assets';

interface Props {
    projectType: string;
    image: ImageMetadata;
    href: string;
    title: string;
    summary: string;
    buttonStyle: string;
    linkButton: string;
    loomEmbedSrc?: string;
}

const { projectType, image, href, title, summary, buttonStyle, linkButton, loomEmbedSrc } = Astro.props as Props;
---

<div class="relative text-light w-full flex flex-col lg:flex-row items-stretch lg:items-center justify-center lg:justify-between lg:pb-8">
    <div class="relative w-full lg:w-1/2 mb-8 lg:mb-0 lg:mr-16">
        <Image
            src={image}
            alt={title}
            width="600"
            height="600"
            class="w-full h-full object-cover bg-transparent rounded transition-opacity duration-300"
            loading="lazy"
            id="heroImage"
        />
        {loomEmbedSrc && (
            <>
                <button id="playButton" class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white bg-opacity-75 rounded-full p-4 z-10">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-black">
                        <polygon points="5 3 19 12 5 21 5 3"></polygon>
                    </svg>
                </button>
                <div id="loomEmbed" class="hidden absolute left-0 w-full z-20">
                    <div class="relative w-full h-0 pb-[56.25%]">
                        <iframe
                            src={loomEmbedSrc}
                            frameborder="0"
                            webkitallowfullscreen
                            mozallowfullscreen
                            allowfullscreen
                            class="absolute top-0 left-0 w-full h-full"
                        ></iframe>
                    </div>
                </div>
            </>
        )}
    </div>
    <div class="flex flex-col items-start max-w-fit mx-0 lg:w-1/2">
        <span class="inline-block bg-gray-800 px-3 py-1 uppercase text-xs font-semibold rounded-full mb-4">{projectType}</span>
        <h1 class="text-3xl md:text-4xl font-bold mb-4">{title}</h1>
        <p class="mb-6 text-lg">{summary}</p>
        {href && (
            <a href={href} target="_blank" class={`${buttonStyle} text-light button inline-block px-6 py-3 rounded-lg text-sm uppercase shadow-lg [background-size:400%;] hover:[background-size:200%;] transition-[background-size] duration-500`}>{linkButton}</a>
        )}
    </div>
</div>

<style>
    a {
        box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
    }
    #loomEmbed {
        top: 50%;
        transform: translateY(-50%);
        height: auto;
    }
</style>

<script>
    const playButton = document.getElementById('playButton');
    const loomEmbed = document.getElementById('loomEmbed');
    const heroImage = document.getElementById('heroImage');

    if (playButton && loomEmbed && heroImage) {
        playButton.addEventListener('click', () => {
            playButton.classList.add('hidden');
            loomEmbed.classList.remove('hidden');
            heroImage.style.opacity = '0';
        });
    }
</script>